spring.application.name=myproject

server.port=8080

server.servlet.encoding.charset=UTF-8

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/campingmall
spring.datasource.username=javaweb
spring.datasource.password=1111

spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

# jpa SQL query 콘솔 출력
spring.jpa.properties.hibernate.show_sql = true
# 콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
spring.jpa.properties.hibernate.format_sql=true
# query에 물음표로 출력되는 바인드 파라미터 출력
logging.level.org.hibernate.type.descriptor=trace

#데이터 베이스 초기화 전략 설정
spring.jpa.hibernate.ddl-auto=update

# none: 사용하지 않음
# create : 기존 테이블 삭제 후 테이블 생성
# create-drop: 기존 테이블 삭제 후 테이블 생성, 종료시점에 테이블 삭제
# update: 변경된 스키마 적용
# validate: 엔티티와 테이블 정상 맵핑 확인

logging.level.org.springframework=info
logging.level.com.example=debug

logging.level.org.springframework.security = trace

#file upload setting

spring.servlet.multipart.enabled=true
#spring.servlet.multipart.location=c:/upload
# 1 file size
spring.servlet.multipart.maxFileSize = 20MB
# 1 request size
spring.servlet.multipart.maxRequestSize = 50MB

# upload location: 업로드 파일 매개변수 역할
itemImgLocation=c:/upload/campingmall

# upload location: 업로드 파일 매개변수 역할
reviewImgLocation=c:/upload/campingmall

# 리소스 업로드 : 실제 업로드 경로와 URL 경로 1:1 맵핑
# 서버에서 이미지 src처리시 url요청 방식
uploadPath=file:///c:/upload/campingmall

# 기본 batch size setting
# 조회 쿼리 한 번으로 지정한 사이즈 만큼 한번에 조회
spring.jpa.properties.hibernate.default_batch_fetch_size=1000

#소셜 로그인 관련 설정(구글에서 각자 만들어서 생성)
# 1. google login
spring.security.oauth2.client.registration.google.client-id=1080925145803-mjqgmlgrbk0kfn1faheufmdcaq751rm1.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.client-scope=profile, email